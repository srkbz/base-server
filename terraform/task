#!/usr/bin/env bash

commands=(init apply install-plugins)

function init {
	postgresConnectionString="$1"
	terraform init \
		-backend-config="conn_str=${postgresConnectionString}"
}

function apply {
	workspaceName="${1}"
	set +e
	terraform workspace new "${workspaceName}" 2>/dev/null
	set -e
	terraform workspace select "${workspaceName}"
	terraform apply \
		-auto-approve -input=false -no-color base
}

function install-plugins {
    pluginVersion="1.0.3"
    pluginsFolder="$(pwd)/terraform.d/plugins/linux_amd64"
    tempFolder="$(pwd)/terraform.d/temp"
    mkdir -p "$pluginsFolder"
    mkdir -p "$tempFolder"

    (
        cd "$tempFolder"
        wget -O "hetznerdns-tf.tar.gz" \
            "https://github.com/timohirt/terraform-provider-hetznerdns/releases/download/v${pluginVersion}/terraform-provider-hetznerdns_${pluginVersion}_linux_amd64.tar.gz"
        tar xzf "hetznerdns-tf.tar.gz"
        mv "./terraform-provider-hetznerdns" "$pluginsFolder"
    )

    rm -rf "$tempFolder"
}










function help {
    printf "%s\n" "Available commands:"
    printf " %s\n" "${commands[@]}" help
}

function run-command {
    command="$1"
    args=("${@:2}")
    for c in "${commands[@]}"; do
        if [ "$c" = "$command" ]; then
            ("$command" "${args[@]}")
            return
        fi
    done
    printf "%s\n" "Command '${command}' does not exist."
}

set -euo pipefail
cd "$(dirname "${BASH_SOURCE[0]}")"
[ -z "${1:-""}" ] || [ "${1:-""}" = "help" ] && help && exit 0
run-command "${1}" "${@:2}"
